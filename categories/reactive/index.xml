<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reactive on Ross Lawley</title>
    <link>http://rosslawley.co.uk/categories/reactive/</link>
    <description>Recent content in Reactive on Ross Lawley</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Wed, 23 Sep 2015 13:00:00 +0100</lastBuildDate>
    <atom:link href="http://rosslawley.co.uk/categories/reactive/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Introducing a new MongoDB Scala Driver</title>
      <link>http://rosslawley.co.uk/introducing-mongodb-scala-driver/</link>
      <pubDate>Wed, 23 Sep 2015 13:00:00 +0100</pubDate>
      
      <guid>http://rosslawley.co.uk/introducing-mongodb-scala-driver/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;m really pleased to announce the first release candidate of a new MongoDB Scala Driver!&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;float:right;&#34; src=&#34;http://mongodb.github.io/mongo-scala-driver/s/img/mongoScalaLogo.png&#34;&gt;&lt;/p&gt;

&lt;h2 id=&#34;insider-information:30e1b2e2e4927e03c8ac09809618f25b&#34;&gt;Insider information&lt;/h2&gt;

&lt;p&gt;At &lt;a href=&#34;http://mongodb.org/&#34;&gt;MongoDB&lt;/a&gt; we&amp;rsquo;ve been really busy, back in April we &lt;a href=&#34;https://www.mongodb.com/blog/post/introducing-30-java-driver&#34;&gt;introduced&lt;/a&gt; the 3.0 Java driver. It was a massive undertaking that included numerous improvements and updates. What got me most excited with the 3.0 release was the introduction of a new fully asynchronous, non-blocking driver. Using this asynchronous driver as a base we also released an &lt;a href=&#34;mongodb.github.io/mongo-java-driver-rx&#34;&gt;RxJava&lt;/a&gt; driver and a &lt;a href=&#34;http://mongodb.github.io/mongo-java-driver-reactivestreams&#34;&gt;Reactive Streams&lt;/a&gt; driver.&lt;/p&gt;

&lt;p&gt;Today we are announcing a new MongoDB Scala Driver, which also builds upon the asynchronous driver, whilst still providing a first class Scala experience.&lt;/p&gt;

&lt;h2 id=&#34;scala-specifics:30e1b2e2e4927e03c8ac09809618f25b&#34;&gt;Scala specifics&lt;/h2&gt;

&lt;p&gt;This new Scala driver required much more than a simple wrapping of the Java driver. Here are some of the highlights:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A modern idiomatic Scala driver with asynchronous and non-blocking IO.&lt;/li&gt;
&lt;li&gt;A new &lt;a href=&#34;http://mongodb.github.io/mongo-scala-driver/1.0/reference/observables/&#34;&gt;&lt;code&gt;Observable&lt;/code&gt;&lt;/a&gt; type that is both composable and flexible enough to handle streams of data from MongoDB.&lt;/li&gt;
&lt;li&gt;New immutable and mutable type safe &lt;a href=&#34;http://mongodb.github.io/mongo-scala-driver/1.0/bson/documents/&#34;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; classes with all the convenience of a &lt;code&gt;Map&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;A clean modern API following the latest MongoDB driver &lt;a href=&#34;https://github.com/mongodb/specifications&#34;&gt;specifications&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A new namespace for Scala &lt;code&gt;org.mongodb.scala&lt;/code&gt;. No more confusion about what classes required for the Scala driver.&lt;/li&gt;
&lt;li&gt;Comprehensive &lt;a href=&#34;http://mongodb.github.io/mongo-scala-driver/&#34;&gt;documentation&lt;/a&gt; site to help get you started.&lt;/li&gt;
&lt;li&gt;Easy &lt;a href=&#34;http://mongodb.github.io/mongo-scala-driver/1.0/integrations/&#34;&gt;integration&lt;/a&gt; with other Reactive libraries such as &lt;a href=&#34;http://reactivex.io/rxscala/&#34;&gt;RxScala&lt;/a&gt; and &lt;a href=&#34;http://www.reactive-streams.org/&#34;&gt;Reactive Streams&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below is a quick example to whet your appetite:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;// Connect to the users collection in mydb
val mongoClient: MongoClient = MongoClient()
val database: MongoDatabase = mongoClient.getDatabase(&amp;quot;mydb&amp;quot;)
val collection: MongoCollection[Document] = database.getCollection(&amp;quot;users&amp;quot;)

// The Document ADT enforces type safety and can implicitly box native scala types to BSON types
val query = Document(&amp;quot;user&amp;quot; -&amp;gt; &amp;quot;Martin&amp;quot;)  // &amp;quot;Martin&amp;quot; becomes BsonString(&amp;quot;Martin&amp;quot;)

// Lets run a query for all Martins and print out the json representation of each document
collection.find(query).subscribe(
  (user: Document) =&amp;gt; println(user.toJson()),                         // onNext
  (error: Throwable) =&amp;gt; println(&amp;quot;Query failed: ${error.getMessage}&amp;quot;), // onError
  () =&amp;gt; println(&amp;quot;Done&amp;quot;)                                               // onComplete
)

// Want Futures? No problems!
val futureUsers: Future[Seq[Document]] = collection.find(query).toFuture()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Available on sonatype for Scala 2.11:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;&amp;quot;org.mongodb.scala&amp;quot; %% &amp;quot;mongodb-scala-driver&amp;quot; % &amp;quot;1.0.0-rc0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;feedback-wanted:30e1b2e2e4927e03c8ac09809618f25b&#34;&gt;Feedback wanted&lt;/h2&gt;

&lt;p&gt;We would love to have your feedback on the new driver, so please feel free to email me directly or post to the &lt;a href=&#34;https://groups.google.com/forum/#!forum/mongodb-user&#34;&gt;MongoDB User&lt;/a&gt; mailing list.&lt;/p&gt;

&lt;p&gt;The best place to get up and running with the new driver is the &lt;a href=&#34;http://mongodb.github.io/mongo-scala-driver/1.0/getting-started/&#34;&gt;getting started&lt;/a&gt; guide.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RxJava - understandably reactive</title>
      <link>http://rosslawley.co.uk/rx-java/</link>
      <pubDate>Wed, 06 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://rosslawley.co.uk/rx-java/</guid>
      <description>&lt;p&gt;Reactive programing is hot stuff at the moment and the
&lt;a href=&#34;https://www.coursera.org/course/reactive&#34;&gt;Coursera Principles of Reactive Programming&lt;/a&gt;
course has &lt;strong&gt;just&lt;/strong&gt; started (its not too late to enroll).&lt;/p&gt;

&lt;p&gt;Recently, I&amp;rsquo;ve been hearing good things about &lt;a href=&#34;https://github.com/Netflix/RxJava&#34;&gt;RxJava&lt;/a&gt; (
a port of .Net&amp;rsquo;s &lt;a href=&#34;http://msdn.microsoft.com/en-gb/data/gg577609.aspx&#34;&gt;Reactive extensions&lt;/a&gt;
) so I wanted to learn some more. Then I stumbled upon a video from a recent
&lt;a href=&#34;http://www.meetup.com/SF-Scala/&#34;&gt;SF Scala&lt;/a&gt; meetup
which covered what it is and how they implemented the core and then added
support for other JVM languages.&lt;/p&gt;

&lt;p&gt;Two things immediately struck me:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Observables are not opnionated about how the backend works.  It could be
concurrent or swapped out with a thread pool, an actor
or an nio event &amp;amp; event loop&amp;hellip; Pretty cool, this means there is a single way
of handling the code no matter if the backend is synchronus or asynchronus.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The methods for manipulating multiple observers, chaining or nesting
is extremely powerful, yet easy to understand.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I&amp;rsquo;m really looking forward to using it, to me its an easier abstraction to
understand for handling streams of data and seemly less complex than using Plays
excellent &lt;code&gt;Iteratee.Concurrent&lt;/code&gt; library.&lt;/p&gt;

&lt;p&gt;Enjoy:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;embed video-player&#34;&gt;
&lt;iframe class=&#34;youtube-player&#34; type=&#34;text/html&#34;
    width=&#34;640&#34; height=&#34;385&#34;
    src=&#34;http://www.youtube.com/embed/tOMK_FYJREw&#34;
    allowfullscreen frameborder=&#34;0&#34;&gt;
&lt;/iframe&gt;
&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Typesafe&#39;s Activator</title>
      <link>http://rosslawley.co.uk/typesafe-activator/</link>
      <pubDate>Tue, 24 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>http://rosslawley.co.uk/typesafe-activator/</guid>
      <description>

&lt;p&gt;Yesterday the &lt;a href=&#34;http://typesafe.com/blog/announcing-activator-10-create-reactive-apps-in-minutes&#34;&gt;Typesafe Activator&lt;/a&gt;
hit 1.0. If you haven&amp;rsquo;t heard about it and use scala or the jvm then take five
minutes and check it out - its worth it.&lt;/p&gt;

&lt;h1 id=&#34;what-is-it:8f899c775a0faeb02adf96bdfce96cff&#34;&gt;What is it?&lt;/h1&gt;

&lt;p&gt;My recommendation alone not enough and you what to know more about it before
installing it?  No problems, let me convince you.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Typesafe Activator is a local web &amp;amp; command-line tool that helps developers
get started with the Typesafe Platform.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Whats that give you?  Basically, a real nice UI in the browser for creating web
applications from templates.  The &lt;a href=&#34;http://typesafe.com/activator/templates&#34;&gt;templates&lt;/a&gt;
cover &amp;ldquo;hello world&amp;rdquo; in scala to using &lt;a href=&#34;http://akka.io&#34;&gt;Akka&lt;/a&gt;, &lt;a href=&#34;http://playframework.com&#34;&gt;
Play&lt;/a&gt; and &lt;a href=&#34;http://www.scala-lang.org/&#34;&gt;Scala&lt;/a&gt; to create
modern scalable reactive web sites.&lt;/p&gt;

&lt;p&gt;Its quick and easy to get going - I chose the
&lt;a href=&#34;http://typesafe.com/activator/template/play-mongo-knockout&#34;&gt;Play Reactive Mongo and knockout.js&lt;/a&gt;
template&lt;/p&gt;

&lt;p class=&#34;text-center&#34;&gt;
&lt;img src=&#34;http://rosslawley.co.uk/images/activator-loading.png&#34;&gt;
&lt;/p&gt;

&lt;p&gt;In the background it downloads all the resources you need to create the project
from the template.  Starting a new project is extremely simple and once the
project is loaded you get to use the Web UI in anger.&lt;/p&gt;

&lt;p class=&#34;text-center&#34;&gt;
&lt;img src=&#34;http://rosslawley.co.uk/images/activator-orientation.png&#34;&gt;
&lt;/p&gt;

&lt;h1 id=&#34;the-tutorial:8f899c775a0faeb02adf96bdfce96cff&#34;&gt;The tutorial&lt;/h1&gt;

&lt;p&gt;Once loaded, you get the tutorial for this template:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The world is going reactive&lt;/p&gt;

&lt;p&gt;Not long ago, response times in the seconds were considered appropriate. Browser
refreshes were the norm in web applications. Systems would go down for hours of
maintenance, or even be rebooted nightly, and this was ok because people only
expected the systems to be up during business hours..&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Exciting stuff!&lt;/em&gt;  So not only can you code, compile and test your application
all in the browser - there&amp;rsquo;s a tutorial to guide you through the various new
concepts as well.&lt;/p&gt;

&lt;p&gt;The reactive mongo tutorial, gets you up and running using creating a reactive
Play web application with a rich front end and scalable backend.  It uses
&lt;a href=&#34;http://reactivemongo.org&#34;&gt;Reactive Mongo&lt;/a&gt; an asynchronous non blocking scala
mongodb driver for the database.  The play framework for the webserver,
&lt;a href=&#34;http://coffeescript.org&#34;&gt;coffeescript&lt;/a&gt; and &lt;a href=&#34;http://knockoutjs.com&#34;&gt;knockout.js&lt;/a&gt;
for the frontend.&lt;/p&gt;

&lt;p&gt;The tutorial walks you through how the various parts of the app work together and
links through to the code.  Next it sets tasks to update parts of the app, extending
it and adding functionality.&lt;/p&gt;

&lt;p&gt;This quickly, gets you up to speed, so if you are interested in any of the
Typesafe stack then download activator now and you&amp;rsquo;ll be up and running in minutes!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>